@page "/companies/{id:guid}/update"
<h2>Update Company</h2>

@if (_companyForm is not null)
{  
    @*
        OnSubmit is used to send a form
        OnValidSubmit first validates the form before send it

        Model is used for creation only but, if we will have an edition we should use EditContext property
        Model="_companyForm"
    *@
    <EditForm EditContext="_editContext" OnValidSubmit="Update" class="card card-body bg-light mt-5">
        <DataAnnotationsValidator />
        @*
        ValidationSummary can be used instead of single error messages below each field
        *@
        <ValidationSummary />
        <div class="form-group row mb-2">
            <label for="name" class="col-md-2 col-form-label">Name</label>
            <div class="col-md-10">
                <InputText id="name" class="form-control" @bind-Value="_companyForm!.Name" />
                @*<ValidationMessage For="(() => _companyForm.Name)" />*@
            </div>
        </div>
        <div class="form-group row mb-2">
            <label for="address" class="col-md-2 col-form-label">Address</label>
            <div class="col-md-10">
                <InputTextArea id="address" class="form-control" @bind-Value="_companyForm.Address"></InputTextArea>
            </div>
        </div>
        <div class="form-group row mb-2">
            <label for="country" class="col-md-2 col-form-label">Country</label>
            <div class="col-md-10">
                <InputText id="country" class="form-control" @bind-Value="_companyForm.Country" />
                @*<ValidationMessage For="(() => _companyForm.Country)" />*@
            </div>
        </div>
        <div class="row mb-2">
            <div class="col-md-12 d-flex justify-content-end">
                <button type="submit" class="btn btn-success" disabled="@formInvalid">Save</button>
            </div>
        </div>
    </EditForm>
}
